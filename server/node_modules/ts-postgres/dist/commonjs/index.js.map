{"version":3,"file":"index.js","sourceRoot":"","sources":["../../src/index.ts"],"names":[],"mappings":";;;AAAA,2CAA8D;AAC9D,yCAUqB;AATjB,oGAAA,OAAO,OAAA;AAWX,uCAMoB;AALhB,sGAAA,UAAU,OAAA;AACV,oGAAA,QAAQ,OAAA;AA6BZ;;;;;;;GAOG;AACI,KAAK,UAAU,OAAO,CAAC,SAAwB,EAAE;IACpD,MAAM,MAAM,GAAG,IAAI,sBAAU,CAAC,MAAM,CAAC,CAAC;IACtC,MAAM,IAAI,GAAG,MAAM,MAAM,CAAC,OAAO,EAAE,CAAC;IACpC,OAAO,MAAM,CAAC,MAAM,CAAC,MAAM,EAAE,IAAI,CAAC,CAAC;AACvC,CAAC;AAJD,0BAIC","sourcesContent":["import { ClientImpl, type ConnectionInfo } from './client.js';\nexport {\n    SSLMode,\n    type ClientNotice,\n    type Configuration,\n    type DataTypeError,\n    type EventListener,\n    type EventMap,\n    type Notification,\n    type PreparedStatement,\n    type SSL,\n} from './client.js';\nimport type { Configuration } from './client.js';\nexport {\n    DataFormat,\n    DataType,\n    type BufferEncoding,\n    type Point,\n    type ValueTypeReader,\n} from './types.js';\nexport type { Query, QueryOptions } from './query.js';\nexport type {\n    Result,\n    ResultIterator,\n    ResultRecord,\n    ResultRow,\n} from './result.js';\nexport type { Environment } from './defaults.js';\nexport type {\n    ClientConnectionDefaults,\n    ClientConnectionOptions,\n    DatabaseError,\n    ErrorLevel,\n    TransactionStatus,\n} from './protocol.js';\n\ninterface _Client extends ClientImpl {}\n\n/** A database client, encapsulating a single connection to the database.\n *\n * @interface\n */\nexport type Client = Omit<_Client, 'connect'> & ConnectionInfo;\n\n/** Connect to the database.\n *\n * @remarks\n * You must close the connection after use using {@link Client.end} to close\n * open handles.\n *\n * @returns A database client, with an active connection.\n */\nexport async function connect(config: Configuration = {}): Promise<Client> {\n    const client = new ClientImpl(config);\n    const info = await client.connect();\n    return Object.assign(client, info);\n}\n"]}