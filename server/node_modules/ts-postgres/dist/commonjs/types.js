"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.isPoint = exports.DataFormat = exports.arrayDataTypeMapping = exports.DataType = void 0;
var DataType;
(function (DataType) {
    DataType[DataType["Bool"] = 16] = "Bool";
    DataType[DataType["Bytea"] = 17] = "Bytea";
    DataType[DataType["Char"] = 18] = "Char";
    DataType[DataType["Name"] = 19] = "Name";
    DataType[DataType["Int8"] = 20] = "Int8";
    DataType[DataType["Int2"] = 21] = "Int2";
    DataType[DataType["Int4"] = 23] = "Int4";
    DataType[DataType["Regproc"] = 24] = "Regproc";
    DataType[DataType["Text"] = 25] = "Text";
    DataType[DataType["Oid"] = 26] = "Oid";
    DataType[DataType["Tid"] = 27] = "Tid";
    DataType[DataType["Xid"] = 28] = "Xid";
    DataType[DataType["Cid"] = 29] = "Cid";
    DataType[DataType["PgDdlCommand"] = 32] = "PgDdlCommand";
    DataType[DataType["Json"] = 114] = "Json";
    DataType[DataType["Xml"] = 142] = "Xml";
    DataType[DataType["PgNodeTree"] = 194] = "PgNodeTree";
    DataType[DataType["ArrayJson"] = 199] = "ArrayJson";
    DataType[DataType["Smgr"] = 210] = "Smgr";
    DataType[DataType["IndexAmHandler"] = 325] = "IndexAmHandler";
    DataType[DataType["Point"] = 600] = "Point";
    DataType[DataType["Lseg"] = 601] = "Lseg";
    DataType[DataType["Path"] = 602] = "Path";
    DataType[DataType["Box"] = 603] = "Box";
    DataType[DataType["Polygon"] = 604] = "Polygon";
    DataType[DataType["Line"] = 628] = "Line";
    DataType[DataType["Cidr"] = 650] = "Cidr";
    DataType[DataType["Float4"] = 700] = "Float4";
    DataType[DataType["Float8"] = 701] = "Float8";
    DataType[DataType["Abstime"] = 702] = "Abstime";
    DataType[DataType["Reltime"] = 703] = "Reltime";
    DataType[DataType["Tinterval"] = 704] = "Tinterval";
    DataType[DataType["Unknown"] = 705] = "Unknown";
    DataType[DataType["Circle"] = 718] = "Circle";
    DataType[DataType["Macaddr8"] = 774] = "Macaddr8";
    DataType[DataType["Money"] = 790] = "Money";
    DataType[DataType["Macaddr"] = 829] = "Macaddr";
    DataType[DataType["Inet"] = 869] = "Inet";
    DataType[DataType["ArrayBytea"] = 1001] = "ArrayBytea";
    DataType[DataType["ArrayChar"] = 1002] = "ArrayChar";
    DataType[DataType["ArrayInt2"] = 1005] = "ArrayInt2";
    DataType[DataType["ArrayInt4"] = 1007] = "ArrayInt4";
    DataType[DataType["ArrayRegprocedure"] = 1008] = "ArrayRegprocedure";
    DataType[DataType["ArrayText"] = 1009] = "ArrayText";
    DataType[DataType["ArrayBpchar"] = 1014] = "ArrayBpchar";
    DataType[DataType["ArrayVarchar"] = 1015] = "ArrayVarchar";
    DataType[DataType["ArrayInt8"] = 1016] = "ArrayInt8";
    DataType[DataType["ArrayFloat4"] = 1021] = "ArrayFloat4";
    DataType[DataType["ArrayFloat8"] = 1022] = "ArrayFloat8";
    DataType[DataType["Aclitem"] = 1033] = "Aclitem";
    DataType[DataType["Bpchar"] = 1042] = "Bpchar";
    DataType[DataType["Varchar"] = 1043] = "Varchar";
    DataType[DataType["Date"] = 1082] = "Date";
    DataType[DataType["Time"] = 1083] = "Time";
    DataType[DataType["Timestamp"] = 1114] = "Timestamp";
    DataType[DataType["ArrayTimestamp"] = 1115] = "ArrayTimestamp";
    DataType[DataType["ArrayDate"] = 1182] = "ArrayDate";
    DataType[DataType["Timestamptz"] = 1184] = "Timestamptz";
    DataType[DataType["ArrayTimestamptz"] = 1185] = "ArrayTimestamptz";
    DataType[DataType["Interval"] = 1186] = "Interval";
    DataType[DataType["Timetz"] = 1266] = "Timetz";
    DataType[DataType["Bit"] = 1560] = "Bit";
    DataType[DataType["Varbit"] = 1562] = "Varbit";
    DataType[DataType["Numeric"] = 1700] = "Numeric";
    DataType[DataType["Refcursor"] = 1790] = "Refcursor";
    DataType[DataType["Regprocedure"] = 2202] = "Regprocedure";
    DataType[DataType["Regoper"] = 2203] = "Regoper";
    DataType[DataType["Regoperator"] = 2204] = "Regoperator";
    DataType[DataType["Regclass"] = 2205] = "Regclass";
    DataType[DataType["Regtype"] = 2206] = "Regtype";
    DataType[DataType["Record"] = 2249] = "Record";
    DataType[DataType["Cstring"] = 2275] = "Cstring";
    DataType[DataType["Any"] = 2276] = "Any";
    DataType[DataType["Anyarray"] = 2277] = "Anyarray";
    DataType[DataType["Void"] = 2278] = "Void";
    DataType[DataType["Trigger"] = 2279] = "Trigger";
    DataType[DataType["LanguageHandler"] = 2280] = "LanguageHandler";
    DataType[DataType["Internal"] = 2281] = "Internal";
    DataType[DataType["Opaque"] = 2282] = "Opaque";
    DataType[DataType["AnyElement"] = 2283] = "AnyElement";
    DataType[DataType["AnyNonArray"] = 2776] = "AnyNonArray";
    DataType[DataType["Uuid"] = 2950] = "Uuid";
    DataType[DataType["ArrayUuid"] = 2951] = "ArrayUuid";
    DataType[DataType["TxidSnapshot"] = 2970] = "TxidSnapshot";
    DataType[DataType["FdwHandler"] = 3115] = "FdwHandler";
    DataType[DataType["PgLsn"] = 3220] = "PgLsn";
    DataType[DataType["TsmHandler"] = 3310] = "TsmHandler";
    DataType[DataType["PgNdistinct"] = 3361] = "PgNdistinct";
    DataType[DataType["PgDependencies"] = 3402] = "PgDependencies";
    DataType[DataType["Anyenum"] = 3500] = "Anyenum";
    DataType[DataType["Tsvector"] = 3614] = "Tsvector";
    DataType[DataType["Tsquery"] = 3615] = "Tsquery";
    DataType[DataType["GtsVector"] = 3642] = "GtsVector";
    DataType[DataType["Regconfig"] = 3734] = "Regconfig";
    DataType[DataType["Regdictionary"] = 3769] = "Regdictionary";
    DataType[DataType["Jsonb"] = 3802] = "Jsonb";
    DataType[DataType["ArrayJsonb"] = 3807] = "ArrayJsonb";
    DataType[DataType["Anyrange"] = 3831] = "Anyrange";
    DataType[DataType["EventTrigger"] = 3838] = "EventTrigger";
    DataType[DataType["Regnamespace"] = 4089] = "Regnamespace";
    DataType[DataType["Regrole"] = 4096] = "Regrole";
    DataType[DataType["MinUserOid"] = 16384] = "MinUserOid";
})(DataType || (exports.DataType = DataType = {}));
exports.arrayDataTypeMapping = new Map([
    [DataType.ArrayBpchar, DataType.Bpchar],
    [DataType.ArrayBytea, DataType.Bytea],
    [DataType.ArrayChar, DataType.Char],
    [DataType.ArrayDate, DataType.Date],
    [DataType.ArrayFloat4, DataType.Float4],
    [DataType.ArrayFloat8, DataType.Float8],
    [DataType.ArrayInt2, DataType.Int2],
    [DataType.ArrayInt4, DataType.Int4],
    [DataType.ArrayInt8, DataType.Int8],
    [DataType.ArrayJson, DataType.Json],
    [DataType.ArrayJsonb, DataType.Jsonb],
    [DataType.ArrayText, DataType.Text],
    [DataType.ArrayTimestamp, DataType.Timestamp],
    [DataType.ArrayTimestamptz, DataType.Timestamptz],
    [DataType.ArrayUuid, DataType.Uuid],
    [DataType.ArrayVarchar, DataType.Varchar],
]);
var DataFormat;
(function (DataFormat) {
    DataFormat[DataFormat["Text"] = 0] = "Text";
    DataFormat[DataFormat["Binary"] = 1] = "Binary";
})(DataFormat || (exports.DataFormat = DataFormat = {}));
/* eslint-disable-next-line @typescript-eslint/no-explicit-any */
function isPoint(item) {
    return 'x' in item && 'y' in item;
}
exports.isPoint = isPoint;
//# sourceMappingURL=types.js.map