{"version":3,"file":"types.js","sourceRoot":"","sources":["../../src/types.ts"],"names":[],"mappings":"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","sourcesContent":["import { Buffer } from 'node:buffer';\n\n// This type isn't really exposed, but we can tease it out using some type gymnastics.\nexport type BufferEncoding = NonNullable<\n    Required<Parameters<Buffer['toString']>[0]>\n>;\n\nexport const enum DataType {\n    Bool = 16,\n    Bytea = 17,\n    Char = 18,\n    Name = 19,\n    Int8 = 20,\n    Int2 = 21,\n    Int4 = 23,\n    Regproc = 24,\n    Text = 25,\n    Oid = 26,\n    Tid = 27,\n    Xid = 28,\n    Cid = 29,\n    PgDdlCommand = 32,\n    Json = 114,\n    Xml = 142,\n    PgNodeTree = 194,\n    ArrayJson = 199,\n    Smgr = 210,\n    IndexAmHandler = 325,\n    Point = 600,\n    Lseg = 601,\n    Path = 602,\n    Box = 603,\n    Polygon = 604,\n    Line = 628,\n    Cidr = 650,\n    Float4 = 700,\n    Float8 = 701,\n    Abstime = 702,\n    Reltime = 703,\n    Tinterval = 704,\n    Unknown = 705,\n    Circle = 718,\n    Macaddr8 = 774,\n    Money = 790,\n    Macaddr = 829,\n    Inet = 869,\n    ArrayBytea = 1001,\n    ArrayChar = 1002,\n    ArrayInt2 = 1005,\n    ArrayInt4 = 1007,\n    ArrayRegprocedure = 1008,\n    ArrayText = 1009,\n    ArrayBpchar = 1014,\n    ArrayVarchar = 1015,\n    ArrayInt8 = 1016,\n    ArrayFloat4 = 1021,\n    ArrayFloat8 = 1022,\n    Aclitem = 1033,\n    Bpchar = 1042,\n    Varchar = 1043,\n    Date = 1082,\n    Time = 1083,\n    Timestamp = 1114,\n    ArrayTimestamp = 1115,\n    ArrayDate = 1182,\n    Timestamptz = 1184,\n    ArrayTimestamptz = 1185,\n    Interval = 1186,\n    Timetz = 1266,\n    Bit = 1560,\n    Varbit = 1562,\n    Numeric = 1700,\n    Refcursor = 1790,\n    Regprocedure = 2202,\n    Regoper = 2203,\n    Regoperator = 2204,\n    Regclass = 2205,\n    Regtype = 2206,\n    Record = 2249,\n    Cstring = 2275,\n    Any = 2276,\n    Anyarray = 2277,\n    Void = 2278,\n    Trigger = 2279,\n    LanguageHandler = 2280,\n    Internal = 2281,\n    Opaque = 2282,\n    AnyElement = 2283,\n    AnyNonArray = 2776,\n    Uuid = 2950,\n    ArrayUuid = 2951,\n    TxidSnapshot = 2970,\n    FdwHandler = 3115,\n    PgLsn = 3220,\n    TsmHandler = 3310,\n    PgNdistinct = 3361,\n    PgDependencies = 3402,\n    Anyenum = 3500,\n    Tsvector = 3614,\n    Tsquery = 3615,\n    GtsVector = 3642,\n    Regconfig = 3734,\n    Regdictionary = 3769,\n    Jsonb = 3802,\n    ArrayJsonb = 3807,\n    Anyrange = 3831,\n    EventTrigger = 3838,\n    Regnamespace = 4089,\n    Regrole = 4096,\n    MinUserOid = 16384,\n}\n\nexport const arrayDataTypeMapping: ReadonlyMap<DataType, DataType> = new Map([\n    [DataType.ArrayBpchar, DataType.Bpchar],\n    [DataType.ArrayBytea, DataType.Bytea],\n    [DataType.ArrayChar, DataType.Char],\n    [DataType.ArrayDate, DataType.Date],\n    [DataType.ArrayFloat4, DataType.Float4],\n    [DataType.ArrayFloat8, DataType.Float8],\n    [DataType.ArrayInt2, DataType.Int2],\n    [DataType.ArrayInt4, DataType.Int4],\n    [DataType.ArrayInt8, DataType.Int8],\n    [DataType.ArrayJson, DataType.Json],\n    [DataType.ArrayJsonb, DataType.Jsonb],\n    [DataType.ArrayText, DataType.Text],\n    [DataType.ArrayTimestamp, DataType.Timestamp],\n    [DataType.ArrayTimestamptz, DataType.Timestamptz],\n    [DataType.ArrayUuid, DataType.Uuid],\n    [DataType.ArrayVarchar, DataType.Varchar],\n]);\n\nexport const enum DataFormat {\n    Text,\n    Binary,\n}\n\nexport type ValueTypeReader = (\n    buffer: Buffer,\n    start: number,\n    end: number,\n    format: DataFormat,\n    encoding?: BufferEncoding,\n) => any;\n\nexport interface Point {\n    x: number;\n    y: number;\n}\n\n/* eslint-disable-next-line @typescript-eslint/no-explicit-any */\nexport function isPoint(item: any): item is Point {\n    return 'x' in item && 'y' in item;\n}\n"]}